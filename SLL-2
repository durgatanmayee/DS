#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node *link;
};
struct node *head = NULL,*cur,*temp,*temp1;
struct node* create(){
int n;
printf("Enter the no.of nodes");
scanf("%d",&n);
while (n--) {
      cur = (struct node*)malloc(sizeof(struct node));
scanf("%d",&cur->data);
cur->link =NULL;
if(head == NULL){
head = cur;
}
else{
temp = head;
while(temp->link != NULL){
temp = temp->link;
         }
temp->link = cur;
}
 }
return head;      
 
}
 


struct node* insert_begin(int ele){
cur = (struct node*)malloc(sizeof(struct node));
cur->data = ele;
cur->link = head;
    head = cur;
return head;
 }


struct node* insert_end(int ele){
cur = (struct node*)malloc(sizeof(struct node));
cur->data = ele;
cur->link = NULL;
temp = head;
while(temp->link != NULL){
temp = temp->link;
}
temp->link = cur;
return head;
}

struct node* insert_pos(int ele,int pos){
cur = (struct node*)malloc(sizeof(struct node));
int c=1;
temp = head;
    while(c < (pos-1)){
temp = temp->link;
c++;
}
    cur->link = temp->link;
    temp->link = cur;
return head;
}

struct node* delete_begin(struct node *head){
temp = head;
head = temp->link;
printf("The deleted element is %d",temp->data);
free(temp);

return head;
}

struct node* delete_end(struct node *head){
temp = head;
while(temp->link != NULL){
temp1 = temp;
temp = temp->link;
}
temp1->link = NULL;
free(temp);
return head;
}

struct node* delete_pos(struct node *head,int pos){
int c=1;
temp = head;
while(c<pos){
temp1 = temp;
temp = temp->link;
  c++;
}
  temp1->link = temp->link;
  free(temp);
return head;
}


int Search(struct node *head,int ele){
int c=1;
temp = head;
while(temp != NULL){
if(temp->data == ele){
return c;
}
temp = temp->link;
c++;

}
return -1;
}


struct node* Sorting(struct node *head){
int x;
temp = head;
while(temp != NULL){
temp1 = head;
while(temp1 != NULL){
if(temp1->data != temp1->link->data){
x = temp1->data;
temp1->data = temp1->link->data;
temp1->link->data = x;

}
temp1= temp1->link;
}
temp = temp->link;

}
return head;
}


int main(){
       int ch,ele,pos;
       while(1){
           printf("1-create()\n,2-Insert_begin\n,3-Insert_end\n,4-insert_position\n,5-delete_begin\n,6-delete_end\n,7-delete_pos\n,8-diaplay\n,9-reverse_display\n,10-search\n");
           printf("Enter your choice");
           scanf("%d",&ch);
           switch(ch){
              case 1:
                  head = create();
                  break;
              case 2:
                  scanf("%d",&ele);
                  head = insert_begin(ele);
                  break;
              case 3:
                  scanf("%d",&ele);
                  head = insert_end(ele);
                  break;
              case 4:
                  printf("Enter the element");
                  scanf("%d",&ele);
                  printf("Enter the position");
                  scanf("%d",&pos);
                  head = insert_pos(ele,pos);
                  break;
              case 5:
                  head = delete_begin(head);
                 break;
              case 6:
                  head = delete_end(head);
                  break;
              case 7:
                  printf("Enter the position");
                  head = delete_pos(head,pos);
                  break;
              case 8:
                  display(head);
                  break;
              case 9:
                  reverse_display(head);
                  break;
              case 10:
                  pos = search(head,key);
                  if(pos == -1)
                    printf("element not found")
                  else
                    printf("element found at %d position",pos);
                  break;
              case 11:
                   head = sorting(head);
                   break;
              case 12;
                   exit(0);
}
}
}

